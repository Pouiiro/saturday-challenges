/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutPollsImport } from './routes/_layout/polls'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutPollImport } from './routes/_layout/$poll'
import { Route as LayoutPollsCreateImport } from './routes/_layout/polls/create'
import { Route as LayoutPollResultImport } from './routes/_layout/$poll.result'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPollsRoute = LayoutPollsImport.update({
  id: '/polls',
  path: '/polls',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPollRoute = LayoutPollImport.update({
  id: '/$poll',
  path: '/$poll',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPollsCreateRoute = LayoutPollsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => LayoutPollsRoute,
} as any)

const LayoutPollResultRoute = LayoutPollResultImport.update({
  id: '/result',
  path: '/result',
  getParentRoute: () => LayoutPollRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/$poll': {
      id: '/_layout/$poll'
      path: '/$poll'
      fullPath: '/$poll'
      preLoaderRoute: typeof LayoutPollImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/polls': {
      id: '/_layout/polls'
      path: '/polls'
      fullPath: '/polls'
      preLoaderRoute: typeof LayoutPollsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$poll/result': {
      id: '/_layout/$poll/result'
      path: '/result'
      fullPath: '/$poll/result'
      preLoaderRoute: typeof LayoutPollResultImport
      parentRoute: typeof LayoutPollImport
    }
    '/_layout/polls/create': {
      id: '/_layout/polls/create'
      path: '/create'
      fullPath: '/polls/create'
      preLoaderRoute: typeof LayoutPollsCreateImport
      parentRoute: typeof LayoutPollsImport
    }
  }
}

// Create and export the route tree

interface LayoutPollRouteChildren {
  LayoutPollResultRoute: typeof LayoutPollResultRoute
}

const LayoutPollRouteChildren: LayoutPollRouteChildren = {
  LayoutPollResultRoute: LayoutPollResultRoute,
}

const LayoutPollRouteWithChildren = LayoutPollRoute._addFileChildren(
  LayoutPollRouteChildren,
)

interface LayoutPollsRouteChildren {
  LayoutPollsCreateRoute: typeof LayoutPollsCreateRoute
}

const LayoutPollsRouteChildren: LayoutPollsRouteChildren = {
  LayoutPollsCreateRoute: LayoutPollsCreateRoute,
}

const LayoutPollsRouteWithChildren = LayoutPollsRoute._addFileChildren(
  LayoutPollsRouteChildren,
)

interface LayoutRouteChildren {
  LayoutPollRoute: typeof LayoutPollRouteWithChildren
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutPollsRoute: typeof LayoutPollsRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutPollRoute: LayoutPollRouteWithChildren,
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutPollsRoute: LayoutPollsRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/$poll': typeof LayoutPollRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/polls': typeof LayoutPollsRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/$poll/result': typeof LayoutPollResultRoute
  '/polls/create': typeof LayoutPollsCreateRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/$poll': typeof LayoutPollRouteWithChildren
  '/about': typeof LayoutAboutRoute
  '/polls': typeof LayoutPollsRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/$poll/result': typeof LayoutPollResultRoute
  '/polls/create': typeof LayoutPollsCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_layout/$poll': typeof LayoutPollRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/polls': typeof LayoutPollsRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/$poll/result': typeof LayoutPollResultRoute
  '/_layout/polls/create': typeof LayoutPollsCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/$poll'
    | '/about'
    | '/polls'
    | '/'
    | '/$poll/result'
    | '/polls/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/$poll'
    | '/about'
    | '/polls'
    | '/'
    | '/$poll/result'
    | '/polls/create'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/signup'
    | '/_layout/$poll'
    | '/_layout/about'
    | '/_layout/polls'
    | '/_layout/'
    | '/_layout/$poll/result'
    | '/_layout/polls/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login",
        "/signup"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/$poll",
        "/_layout/about",
        "/_layout/polls",
        "/_layout/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_layout/$poll": {
      "filePath": "_layout/$poll.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/$poll/result"
      ]
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/polls": {
      "filePath": "_layout/polls.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/polls/create"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$poll/result": {
      "filePath": "_layout/$poll.result.tsx",
      "parent": "/_layout/$poll"
    },
    "/_layout/polls/create": {
      "filePath": "_layout/polls/create.tsx",
      "parent": "/_layout/polls"
    }
  }
}
ROUTE_MANIFEST_END */
